{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport UserInput from './userInput.js';\nimport Feedback from \"./feedback/feedback\";\nimport Backdrop from \"./backdrop\";\nimport styles from '../scss/backdrop.scss';\n\nvar SampleQ =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SampleQ, _Component);\n\n  _createClass(SampleQ, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var _ref$query = _ref.query,\n          amount = _ref$query.amount,\n          question = _ref$query.question,\n          answer = _ref$query.answer;\n      return {\n        specAmt: amount,\n        specQ: question,\n        specA: answer\n      };\n    }\n  }]);\n\n  function SampleQ(props) {\n    var _this;\n\n    _classCallCheck(this, SampleQ);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SampleQ).call(this, props));\n    _this.state = {\n      showQuestion: false,\n      // tracks visibility of first modal (the question modal)\n      showFeedback: false,\n      // tracks visibility of second modal (the feedback modal)\n      showBackdrop: false // tracks visibility of backdrop when question pops up\n\n    };\n\n    _this.handleShow = function () {\n      // show question and the backdrop when the user clicks a cell on the table\n      _this.setState({\n        showQuestion: true,\n        showBackdrop: true\n      });\n    };\n\n    _this.handleHide = function () {\n      _this.setState({\n        showQuestion: false,\n        showBackdrop: true\n      });\n    };\n\n    _this.submitForm = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        showQuestion: false,\n        // close question modal\n        showFeedback: true,\n        // should open Feedback modal\n        showBackdrop: true\n      });\n    };\n\n    _this.closeFeedback = function () {\n      // close Feedback modal and close backdrop so that it goes back to the table\n      _this.setState({\n        showFeedback: false,\n        showBackdrop: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SampleQ, [{\n    key: \"render\",\n    value: function render() {\n      var backdrop;\n\n      if (this.state.showBackdrop) {\n        backdrop = React.createElement(Backdrop, null);\n      } else {}\n\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        variant: \"outline-danger\",\n        size: \"lg\",\n        onClick: this.handleShow\n      }, \"$ \", this.props.amount, \"00\"), backdrop, React.createElement(Modal, {\n        show: this.state.showQuestion,\n        onHide: this.handleHide,\n        dialogClassName: \"modal-90w\",\n        \"aria-labelledby\": \"example-custom-modal-styling-title\"\n      }, React.createElement(Modal.Header, {\n        closeButton: true\n      }, React.createElement(Modal.Title, {\n        id: \"example-custom-modal-styling-title\"\n      }, \"Question\")), React.createElement(Modal.Body, null, React.createElement(\"p\", null, this.props.question), React.createElement(\"div\", null, React.createElement(UserInput, {\n        answer: this.props.specA,\n        handleClick: this.submitForm\n      })))), React.createElement(Feedback, {\n        showModal: this.state.showFeedback,\n        handleHide: this.closeFeedback\n      }));\n    }\n  }]);\n\n  return SampleQ;\n}(Component);\n\nexport default SampleQ;","map":{"version":3,"sources":["/Users/Ruthvik/Downloads/Jeopardy/components/question.js"],"names":["React","Component","Modal","Button","UserInput","Feedback","Backdrop","styles","SampleQ","query","amount","question","answer","specAmt","specQ","specA","props","state","showQuestion","showFeedback","showBackdrop","handleShow","setState","handleHide","submitForm","event","preventDefault","closeFeedback","backdrop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport UserInput from './userInput.js';\nimport Feedback from \"./feedback/feedback\";\nimport Backdrop from \"./backdrop\";\nimport styles from '../scss/backdrop.scss';\n\nclass SampleQ extends Component {\n    static getInitialProps({query: {amount, question, answer}}) {\n        return {specAmt: amount, specQ: question, specA: answer}\n    }\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showQuestion: false, // tracks visibility of first modal (the question modal)\n            showFeedback: false, // tracks visibility of second modal (the feedback modal)\n            showBackdrop: false // tracks visibility of backdrop when question pops up\n        };\n\n        this.handleShow = () => {\n            // show question and the backdrop when the user clicks a cell on the table\n            this.setState({ showQuestion: true, showBackdrop: true });\n        };\n\n        this.handleHide = () => {\n            this.setState({ showQuestion: false, showBackdrop: true });\n        };\n\n        this.submitForm = event => {\n            event.preventDefault();\n\n            this.setState({\n                showQuestion: false, // close question modal\n                showFeedback: true, // should open Feedback modal\n                showBackdrop: true\n            });\n        };\n\n        this.closeFeedback = () => {\n            // close Feedback modal and close backdrop so that it goes back to the table\n            this.setState( { showFeedback: false, showBackdrop: false });\n        };\n    }\n\n    render() {\n        let backdrop;\n\n        if (this.state.showBackdrop) {\n            backdrop = <Backdrop/>\n        } else {}\n\n        return (\n            <>\n                <Button variant=\"outline-danger\" size = \"lg\" onClick={this.handleShow}>\n                    $ {this.props.amount}00\n                </Button>\n\n                {backdrop}\n\n                <Modal\n                    show={this.state.showQuestion}\n                    onHide={this.handleHide}\n                    dialogClassName=\"modal-90w\"\n                    aria-labelledby=\"example-custom-modal-styling-title\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\n                            Question\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>\n                            {this.props.question}\n                        </p>\n                        <div>\n                            <UserInput\n                                answer={this.props.specA}\n                                handleClick={this.submitForm}\n                            />\n                        </div>\n                    </Modal.Body>\n                </Modal>\n                <Feedback\n                    showModal={this.state.showFeedback}\n                    handleHide={this.closeFeedback}\n                />\n            </>\n        );\n    }\n}\n\nexport default SampleQ;"]},"metadata":{},"sourceType":"module"}