{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport styles from '../../scss/modalStyle.scss';\nimport Button from 'react-bootstrap/Button';\n\nvar Feedback =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feedback, _Component);\n\n  function Feedback(props) {\n    _classCallCheck(this, Feedback);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Feedback).call(this, props));\n  }\n\n  _createClass(Feedback, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        size: \"sm\",\n        show: this.props.showModal,\n        onHide: this.props.handleHide\n      }, React.createElement(Modal.Dialog, {\n        className: styles.modalConfirm\n      }, React.createElement(Modal.Body, {\n        className: styles.modalContent\n      }, React.createElement(Modal.Body, {\n        className: styles.modalHeader\n      }, React.createElement(IconContext.Provider, {\n        value: {\n          color: '#fff',\n          size: '70px',\n          className: styles.modalConfirmIconBox\n        }\n      }, React.createElement(\"div\", null, React.createElement(AiFillCheckCircle, null))), React.createElement(\"h4\", {\n        className: \"mx-auto\"\n      }, \"Congratulations!\")), React.createElement(Modal.Body, {\n        className: styles.body\n      }, React.createElement(\"p\", {\n        className: \"text-center\"\n      }, \"That was the correct answer.\")), React.createElement(Modal.Body, {\n        className: styles.modalFooter\n      }, React.createElement(Button, {\n        className: styles.button,\n        \"data-dismiss\": \"modal\",\n        variant: \"success\",\n        block: true,\n        size: \"lg\",\n        onClick: this.props.handleHide\n      }, \"OK\")))));\n    }\n  }]);\n\n  return Feedback;\n}(Component);\n\nexport default Feedback;","map":{"version":3,"sources":["/Users/Ruthvik/Downloads/Jeopardy/components/feedback/feedback.js"],"names":["React","Component","Modal","AiFillCheckCircle","IconContext","styles","Button","Feedback","props","showModal","handleHide","modalConfirm","modalContent","modalHeader","color","size","className","modalConfirmIconBox","body","modalFooter","button"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iFACTA,KADS;AAElB;;;;6BAEQ;AACL,aACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,IADT;AAEI,QAAA,IAAI,EAAE,KAAKA,KAAL,CAAWC,SAFrB;AAGI,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE;AAHvB,SAKI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAEL,MAAM,CAACM;AAAhC,SACI,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAEN,MAAM,CAACO;AAA9B,SACI,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAEP,MAAM,CAACQ;AAA9B,SACK,oBAAC,WAAD,CAAa,QAAb;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE,MADJ;AAEHC,UAAAA,IAAI,EAAE,MAFH;AAGHC,UAAAA,SAAS,EAAEX,MAAM,CAACY;AAHf;AADX,SAOI,iCACI,oBAAC,iBAAD,OADJ,CAPJ,CADL,EAYI;AAAI,QAAA,SAAS,EAAC;AAAd,4BAZJ,CADJ,EAeI,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAEZ,MAAM,CAACa;AAA9B,SACI;AAAG,QAAA,SAAS,EAAC;AAAb,wCADJ,CAfJ,EAkBI,oBAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAEb,MAAM,CAACc;AAA9B,SACI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAEd,MAAM,CAACe,MADtB;AAEI,wBAAa,OAFjB;AAGI,QAAA,OAAO,EAAC,SAHZ;AAII,QAAA,KAAK,MAJT;AAKI,QAAA,IAAI,EAAC,IALT;AAMI,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWE;AANxB,cADJ,CAlBJ,CADJ,CALJ,CADJ;AAyCH;;;;EA/CkBT,S;;AAkDvB,eAAeM,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport styles from '../../scss/modalStyle.scss';\nimport Button from 'react-bootstrap/Button';\n\nclass Feedback extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Modal\n                size=\"sm\"\n                show={this.props.showModal}\n                onHide={this.props.handleHide}\n            >\n                <Modal.Dialog className={styles.modalConfirm}>\n                    <Modal.Body className={styles.modalContent}>\n                        <Modal.Body className={styles.modalHeader}>\n                             <IconContext.Provider\n                                 value={{\n                                     color: '#fff',\n                                     size: '70px',\n                                     className: styles.modalConfirmIconBox,\n                                 }}\n                             >\n                                 <div>\n                                     <AiFillCheckCircle />\n                                 </div>\n                             </IconContext.Provider>\n                            <h4 className=\"mx-auto\">Congratulations!</h4>\n                        </Modal.Body>\n                        <Modal.Body className={styles.body}>\n                            <p className=\"text-center\">That was the correct answer.</p>\n                        </Modal.Body>\n                        <Modal.Body className={styles.modalFooter}>\n                            <Button\n                                className={styles.button}\n                                data-dismiss=\"modal\"\n                                variant=\"success\"\n                                block\n                                size=\"lg\"\n                                onClick={this.props.handleHide}\n                            >\n                                OK\n                            </Button>\n                        </Modal.Body>\n                    </Modal.Body>\n                </Modal.Dialog>\n            </Modal>\n        );\n    }\n}\n\nexport default Feedback;\n"]},"metadata":{},"sourceType":"module"}