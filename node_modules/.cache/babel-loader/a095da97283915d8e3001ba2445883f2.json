{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport UserInput from './userInput.js';\nimport CorrectAnswer from \"./feedback/correctAnswer\";\nimport WrongAnswer from \"./feedback/wrongAnswer\";\n\nvar SampleQ =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SampleQ, _Component);\n\n  function SampleQ(props) {\n    var _this;\n\n    _classCallCheck(this, SampleQ);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SampleQ).call(this, props));\n    _this.state = {\n      showQuestion: false,\n      // tracks visibility of first modal (the question modal)\n      showFeedback: false // tracks visibility of second modal (the feedback modal)\n\n    };\n    _this.userAnswer = ''; // represents what the user answered for the question\n\n    _this.handleInput = function (input) {\n      _this.userAnswer = input;\n    };\n\n    _this.handleShow = function () {\n      // show question and the backdrop when the user clicks a cell on the table\n      _this.setState({\n        showQuestion: true\n      });\n\n      _this.props.showBackdrop();\n    };\n\n    _this.handleHide = function () {\n      _this.setState({\n        showQuestion: false\n      });\n\n      _this.props.hideBackdrop();\n    };\n\n    _this.submitForm = function (event) {\n      event.preventDefault();\n\n      _this.props.hideBackdrop(); // take down stars backdrop\n\n\n      _this.setState({\n        showQuestion: false,\n        // close question modal\n        showFeedback: true // should open CorrectAnswer modal\n\n      });\n    };\n\n    _this.closeFeedback = function () {\n      // close feedback modal and close backdrop so that it goes back to the table\n      _this.setState({\n        showFeedback: false\n      });\n\n      _this.props.hideBackdrop();\n    };\n\n    return _this;\n  }\n\n  _createClass(SampleQ, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Button, {\n        variant: \"outline-danger\",\n        size: \"lg\",\n        onClick: this.handleShow\n      }, \"$ \", this.props.amount, \"00\"), React.createElement(Modal, {\n        show: this.state.showQuestion,\n        onHide: this.handleHide,\n        dialogClassName: \"modal-90w\",\n        \"aria-labelledby\": \"example-custom-modal-styling-title\",\n        backdrop: false\n      }, React.createElement(Modal.Header, {\n        closeButton: true\n      }, React.createElement(Modal.Title, {\n        id: \"example-custom-modal-styling-title\"\n      }, \"Question\")), React.createElement(Modal.Body, null, React.createElement(\"p\", null, this.props.question), React.createElement(\"div\", null, React.createElement(UserInput, {\n        handleInput: this.handleInput,\n        handleClick: this.submitForm\n      })))), this.userAnswer === this.props.answer ? React.createElement(CorrectAnswer, null) : React.createElement(WrongAnswer, null) // pass in the right props for both modals as shown below\n      , React.createElement(WrongAnswer, {\n        showModal: this.state.showFeedback,\n        handleHide: this.closeFeedback,\n        amntMoney: this.props.amount\n      }));\n    }\n  }]);\n\n  return SampleQ;\n}(Component);\n\nexport default SampleQ;","map":{"version":3,"sources":["/Users/Ruthvik/Downloads/Jeopardy/components/question.js"],"names":["React","Component","Modal","Button","UserInput","CorrectAnswer","WrongAnswer","SampleQ","props","state","showQuestion","showFeedback","userAnswer","handleInput","input","handleShow","setState","showBackdrop","handleHide","hideBackdrop","submitForm","event","preventDefault","closeFeedback","amount","question","answer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,KADL;AACY;AACrBC,MAAAA,YAAY,EAAE,KAFL,CAEY;;AAFZ,KAAb;AAKA,UAAKC,UAAL,GAAkB,EAAlB,CARe,CAQO;;AAEtB,UAAKC,WAAL,GAAmB,UAACC,KAAD,EAAW;AAC1B,YAAKF,UAAL,GAAkBE,KAAlB;AACH,KAFD;;AAIA,UAAKC,UAAL,GAAkB,YAAM;AACpB;AACA,YAAKC,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACA,YAAKF,KAAL,CAAWS,YAAX;AACH,KAJD;;AAMA,UAAKC,UAAL,GAAkB,YAAM;AACpB,YAAKF,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACA,YAAKF,KAAL,CAAWW,YAAX;AACH,KAHD;;AAKA,UAAKC,UAAL,GAAkB,UAAAC,KAAK,EAAI;AACvBA,MAAAA,KAAK,CAACC,cAAN;;AAEA,YAAKd,KAAL,CAAWW,YAAX,GAHuB,CAGI;;;AAE3B,YAAKH,QAAL,CAAc;AACVN,QAAAA,YAAY,EAAE,KADJ;AACW;AACrBC,QAAAA,YAAY,EAAE,IAFJ,CAEU;;AAFV,OAAd;AAIH,KATD;;AAWA,UAAKY,aAAL,GAAqB,YAAM;AACvB;AACA,YAAKP,QAAL,CAAe;AAAEL,QAAAA,YAAY,EAAE;AAAhB,OAAf;;AACA,YAAKH,KAAL,CAAWW,YAAX;AACH,KAJD;;AApCe;AAyClB;;;;6BAEQ;AACL,aACI,0CACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAiC,QAAA,IAAI,EAAG,IAAxC;AAA6C,QAAA,OAAO,EAAE,KAAKJ;AAA3D,eACO,KAAKP,KAAL,CAAWgB,MADlB,OADJ,EAKI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,YADrB;AAEI,QAAA,MAAM,EAAE,KAAKQ,UAFjB;AAGI,QAAA,eAAe,EAAC,WAHpB;AAII,2BAAgB,oCAJpB;AAKI,QAAA,QAAQ,EAAE;AALd,SAOI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW;AAAzB,SACI,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC;AAAhB,oBADJ,CAPJ,EAYI,oBAAC,KAAD,CAAO,IAAP,QACI,+BACK,KAAKV,KAAL,CAAWiB,QADhB,CADJ,EAII,iCACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAE,KAAKZ,WADtB;AAEI,QAAA,WAAW,EAAE,KAAKO;AAFtB,QADJ,CAJJ,CAZJ,CALJ,EAiCM,KAAKR,UAAL,KAAoB,KAAKJ,KAAL,CAAWkB,MAA/B,GACE,oBAAC,aAAD,OADF,GAGE,oBAAC,WAAD,OApCR,CAoCwB;AApCxB,QAuCI,oBAAC,WAAD;AACI,QAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWE,YAD1B;AAEI,QAAA,UAAU,EAAE,KAAKY,aAFrB;AAGI,QAAA,SAAS,EAAE,KAAKf,KAAL,CAAWgB;AAH1B,QAvCJ,CADJ;AA+CH;;;;EA5FiBvB,S;;AA+FtB,eAAeM,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport UserInput from './userInput.js';\nimport CorrectAnswer from \"./feedback/correctAnswer\";\nimport WrongAnswer from \"./feedback/wrongAnswer\";\n\nclass SampleQ extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showQuestion: false, // tracks visibility of first modal (the question modal)\n            showFeedback: false, // tracks visibility of second modal (the feedback modal)\n        };\n\n        this.userAnswer = ''; // represents what the user answered for the question\n\n        this.handleInput = (input) => {\n            this.userAnswer = input;\n        };\n\n        this.handleShow = () => {\n            // show question and the backdrop when the user clicks a cell on the table\n            this.setState({ showQuestion: true });\n            this.props.showBackdrop();\n        };\n\n        this.handleHide = () => {\n            this.setState({ showQuestion: false });\n            this.props.hideBackdrop();\n        };\n\n        this.submitForm = event => {\n            event.preventDefault();\n\n            this.props.hideBackdrop(); // take down stars backdrop\n\n            this.setState({\n                showQuestion: false, // close question modal\n                showFeedback: true, // should open CorrectAnswer modal\n            });\n        };\n\n        this.closeFeedback = () => {\n            // close feedback modal and close backdrop so that it goes back to the table\n            this.setState( { showFeedback: false });\n            this.props.hideBackdrop();\n        };\n    }\n\n    render() {\n        return (\n            <>\n                <Button variant=\"outline-danger\" size = \"lg\" onClick={this.handleShow}>\n                    $ {this.props.amount}00\n                </Button>\n\n                <Modal\n                    show={this.state.showQuestion}\n                    onHide={this.handleHide}\n                    dialogClassName=\"modal-90w\"\n                    aria-labelledby=\"example-custom-modal-styling-title\"\n                    backdrop={false}\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\n                            Question\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>\n                            {this.props.question}\n                        </p>\n                        <div>\n                            <UserInput\n                                handleInput={this.handleInput}\n                                handleClick={this.submitForm}\n                            />\n                        </div>\n                    </Modal.Body>\n                </Modal>\n\n                {/* don't use if else. maybe create parent modal component and then extend it to both feedback*/}\n\n                { /* look up how to actually write a long ternary operator statement properly */ }\n                { this.userAnswer === this.props.answer ?\n                    <CorrectAnswer />\n                    :\n                    <WrongAnswer /> // pass in the right props for both modals as shown below\n                }\n\n                <WrongAnswer\n                    showModal={this.state.showFeedback}\n                    handleHide={this.closeFeedback}\n                    amntMoney={this.props.amount}\n                />\n            </>\n        );\n    }\n}\n\nexport default SampleQ;"]},"metadata":{},"sourceType":"module"}