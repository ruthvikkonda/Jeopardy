{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport Table from \"react-bootstrap/Table\";\nimport SampleQ from '../components/question.js';\nimport css from '../scss/style.scss';\nimport Layout from '../components/layout';\n\nvar _default =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(_default, _Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"createTable\", function () {\n      var table = [];\n      var cats = [];\n\n      for (var i = 0; i < _this.props.postCs.length; i++) {\n        cats.push(React.createElement(\"th\", {\n          key: i\n        }, _this.props.postCs[i].title));\n      }\n\n      table.push(React.createElement(\"thead\", null, \" \", React.createElement(\"tr\", null, \" \", cats, \" \"), \" \"));\n      var index = 0; // Outer loop to create parent\n\n      for (var _i = 1; _i < 6; _i++) {\n        var children = []; //Inner loop to create children\n\n        for (var j = 1; j < 7; j++) {\n          children.push(React.createElement(\"td\", null, React.createElement(\"div\", null, React.createElement(SampleQ, {\n            amount: _i,\n            question: _this.props.allQs[index].title,\n            answer: _this.props.allAs[index].title,\n            showBackdrop: _this.showBackground,\n            hideBackdrop: _this.hideBackground\n          }))));\n          index++;\n        } //Create the parent and add the children\n\n\n        table.push(React.createElement(\"tr\", null, children));\n      }\n\n      return table;\n    });\n\n    _this.state = {\n      showBackground: false\n    };\n\n    _this.showBackground = function () {\n      _this.setState({\n        showBackground: true\n      });\n    };\n\n    _this.hideBackground = function () {\n      _this.setState({\n        showBackground: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var backdrop; // only shows if either the question or feedback modal is up. if neither are open, then don't show stars\n\n      if (this.state.showBackground) {\n        backdrop = React.createElement(Layout, {\n          showBackground: this.state.showBackground,\n          title: \"llll\"\n        });\n        console.log(\"HI\");\n      }\n\n      return React.createElement(\"div\", null, backdrop, React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        className: css.table\n      }, this.createTable()));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var _ref$query = _ref.query,\n          categories = _ref$query.categories,\n          questions = _ref$query.questions,\n          answers = _ref$query.answers;\n      return {\n        postCs: categories,\n        allQs: questions,\n        allAs: answers\n      };\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/Ruthvik/Downloads/Jeopardy/pages/table.js"],"names":["React","Component","Table","SampleQ","css","Layout","props","table","cats","i","postCs","length","push","title","index","children","j","allQs","allAs","showBackground","hideBackground","state","setState","backdrop","console","log","createTable","query","categories","questions","answers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Table from \"react-bootstrap/Table\";\nimport SampleQ from '../components/question.js';\nimport css from '../scss/style.scss';\nimport Layout from '../components/layout';\n\nexport default class extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showBackground: false\n        };\n\n        this.showBackground = () => {\n            this.setState({ showBackground: true });\n        };\n\n        this.hideBackground = () => {\n            this.setState({ showBackground: false });\n        }\n    }\n\n    static getInitialProps({query: {categories, questions, answers}}) {\n        return {postCs: categories, allQs: questions, allAs: answers}\n    }\n\n    createTable = () => {\n        let table = [];\n\n        let cats = [];\n\n        for (let i = 0; i < this.props.postCs.length; i++){\n            cats.push(<th key = {i}>{this.props.postCs[i].title}</th>);\n        }\n\n        table.push(<thead> <tr> {cats} </tr> </thead>);\n\n        let index = 0;\n        // Outer loop to create parent\n        for (let i = 1; i < 6; i++) {\n            let children = [];\n\n            //Inner loop to create children\n            for (let j = 1; j < 7; j++) {\n                children.push(\n                    <td>\n                        <div>\n                            <SampleQ\n                                amount={i}\n                                question={this.props.allQs[(index)].title}\n                                answer={this.props.allAs[(index)].title}\n                                showBackdrop={this.showBackground}\n                                hideBackdrop={this.hideBackground}\n                            />\n                        </div>\n                    </td>);\n                index++;\n            }\n            //Create the parent and add the children\n            table.push(<tr>{children}</tr>)\n        }\n\n        return table\n    };\n\n    render() {\n        let backdrop;\n\n        // only shows if either the question or feedback modal is up. if neither are open, then don't show stars\n        if ( this.state.showBackground ) {\n            backdrop = <Layout showBackground={this.state.showBackground} title=\"llll\"/>\n            console.log(\"HI\");\n        }\n\n        return (\n            <div>\n                {backdrop}\n                <Table striped bordered hover variant = \"dark\" className={css.table}>\n                    {this.createTable()}\n                </Table>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}